# Database Configuration
#spring.datasource.url=${DB_URL}
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}

# Databse Configuration for using Amazon database service (the next lines are an example when you have the databases at Amazon). 

# spring.datasource.url=jdbc:postgresql://credit-request-db.cyrlczakjihy.us-east-1.rds.amazonaws.com:5432/credit_request_db
# spring.datasource.username=${DB_USERNAME:postgres}
# spring.datasource.password=${DB_PASSWORD:msgfoundation}
# spring.datasource.driverClassName=org.postgresql.Driver

# Database Configuration for using database locally. 
# Next lines must be changed for using postgres locally.   

# Database configuration 
spring.datasource.url=jdbc:postgresql://localhost:5432/credit_request_db
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:admin}
spring.datasource.driverClassName=org.postgresql.Driver

# Hibernate Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


API_URL=http://localhost:9000/engine-rest/

# Camunda API Configuration
camunda.url.start=http://localhost:9000/engine-rest/process-definition/key/MSGF-CreditResquest/start

# Port configuration
server.port=9003

server.error.whitelabel.enabled=false